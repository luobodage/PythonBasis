# 1.
# 将一个给定的整型列表转置输出，
# 例如：    源列表，1
# 2
# 3
# 4
# 5
# 6
# 转置之后的列表，6
# 5
# 4
# 3
# 2
# 1
# 
print("------------------------------")
print("""
1.
将一个给定的整型列表转置输出，
例如源列表，1 2 3 4 5 6
转置之后的列表，6 5 4 3 2 1
""")
list_01 = [1, 2, 3, 4, 5, 6]
print(list_01[::-1])
# 2.
# 静态初始化一维列表(10，20，11，35，6, 89)，进行排序
#
print("------------------------------")
print("""
2.静态初始化一维列表(10，20，11，35，6, 89)，进行排序
""")
list_02 = [10, 20, 11, 35, 6, 89]
list_02.sort()
print(list_02)
# 3.静态初始化二维列表((1)，(2，3)，(4，5，6))，输出每个元素的值
print("------------------------------")
print("3.静态初始化二维列表((1)，(2，3)，(4，5，6))，输出每个元素的值")
list_03 = [[1], [2, 3], [4, 5, 6]]
for i in list_03:
    for j in i:
        print(j, end=' ')
# 4、    现在有如下的一个列表：
# oldArr = (1, 3, 4, 5, 0, 0, 6, 6, 0, 5, 4, 7, 6, 7, 0, 5);
# 要求将以上列表中值为0的项去掉，将不为0的值存入一个新的列表，生成的新列表为：
# newArr = (1, 3, 4, 5, 6, 6, 5, 4, 7, 6, 7, 5);
# 思路：生活中的问题解决 = 程序中的解决；
# 1、    确定出不为0的个数，这样可以开辟新列表；
# 2、    从旧的列表之中，取出内容，并将其赋给新开辟的列表；
print("------------------------------")
print("""
4、    现在有如下的一个列表：
oldArr = (1, 3, 4, 5, 0, 0, 6, 6, 0, 5, 4, 7, 6, 7, 0, 5);
要求将以上列表中值为0的项去掉，将不为0的值存入一个新的列表，生成的新列表为：
newArr = (1, 3, 4, 5, 6, 6, 5, 4, 7, 6, 7, 5);
思路：生活中的问题解决 = 程序中的解决；
1、    确定出不为0的个数，这样可以开辟新列表；
2、    从旧的列表之中，取出内容，并将其赋给新开辟的列表
""")
oldArr = [1, 3, 4, 5, 0, 0, 6, 6, 0, 5, 4, 7, 6, 7, 0, 5]
# for i in range(len(oldArr)):
#     if oldArr[i] == 0:
#         del oldArr[i]
newArry = []
for i in oldArr:
    if i != 0:
        newArry.append(i)
print(newArry)

# 5、    现在给出两个列表：
# · 列表A：(1，7，9，11，13，15，17，19)
# · 列表b：(2，4，6，8，10)
# 两个列表合并为列表c，按升序排列。
print("------------------------------")
print("""
5、    现在给出两个列表：
· 列表A：(1，7，9，11，13，15，17，19)
· 列表b：(2，4，6，8，10)
两个列表合并为列表c，按升序排列。
""")
list_a = [1, 7, 9, 11, 13, 15, 17, 19]
list_b = [2, 4, 6, 8, 10]
list_a.extend(list_b)
list_a.sort()
print(list_a)
# 
# 6.
# 静态初始化二维列表((11，15，32，21)，(2，3)，(4，5，6))，输出每个元素的值，并从小到大排序。
#
print("------------------------------")
print("6. 静态初始化二维列表((11，15，32，21)，(2，3)，(4，5，6))，输出每个元素的值，并从小到大排序。")
list_06 = [[11, 15, 32, 21], [2, 3], [4, 5, 6]]
list_c = []
for i in list_06:
    for j in i:
        list_c.append(j)
list_c.sort()
print(list_c)

# 7.. * 输出杨辉三角
# 杨辉三角如下：
# 1
# 1 1
# 1 2 1
# 1 3 3 1
# 1 4 6 4 1
# ……
# 杨辉三角的特点：
# 1.第i行有i个元素
# 2.每一行的第一个元素和最后一个元素都为1
# 3.除了1之外，每个元素的值，都等于上一行同位置的元素以及前一个元素的和。
# 例如：
# 1 4 6 4 1
# 的下一行
# 1 a1 a2 a3 a4 1
# a1 = 4 + 1 = 5
# a2 = 6 + 4 = 10
# a3 = 4 + 6 = 10
# a4 = 1 + 4 = 5
# 依次类推。
# 要求：读入一个整数n，输出杨辉三角的前n行
#
print("------------------------------")
print("""
7.输出杨辉三角
杨辉三角如下：
1
1 1
1 2 1
1 3 3 1
1 4 6 4 1
……
杨辉三角的特点：
1.第i行有i个元素
2.每一行的第一个元素和最后一个元素都为1
3.除了1之外，每个元素的值，都等于上一行同位置的元素以及前一个元素的和。
例如：
1 4 6 4 1
的下一行
1 a1 a2 a3 a4 1
a1 = 4 + 1 = 5
a2 = 6 + 4 = 10
a3 = 4 + 6 = 10
a4 = 1 + 4 = 5
依次类推。
要求：读入一个整数n，输出杨辉三角的前n行
""")


def yanghuiTriangle(num):
    value = [1]
    print(value[0])

    for i in range(num):
        value.append(0)
        value = [value[i - 1] + value[i] for i in range(len(value))]
        for i in value:
            print(i, end=' ')
        print()


yanghuiTriangle(10)
# 8. * 列表的插入和删除
# 定义一个长度为10的列表，通过控制台的输入5个数，
# 1.
# 向列表中指定的位置中插入一个新元素，
# 2.
# 删除指定位置的元素
print("------------------------------")
print("""
列表的插入和删除
# 定义一个长度为10的列表，通过控制台的输入5个数，
# 1.
# 向列表中指定的位置中插入一个新元素，
# 2.
# 删除指定位置的元素
""")
list_8 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
for i in range(2):
    a = int(input("请输入你要插入的数字:"))
    list_8.append(a)
print(list_8)
b = int(input("请输入你要删除的数字的位置:"))
del list_8[b - 1]
print(list_8)
